import React from "react";
import "./index.scss";
export interface SelectProps {
    selectValueMaxWidth?: any;
    errorPaddingLeft?: any;
    suffixContentExternalCls?: string;
    selectContentExternalCls?: string;
    labelMinWidth?: any;
    noWrap?: boolean;
    shouldFocus?: boolean;
    activeColor?: {
        font: string;
        bgc: string;
    };
    returnType?: "str" | "obj";
    showEmpty?: boolean;
    showDefaultValue?: boolean;
    labelKey?: string;
    valueKey?: string;
    showLabel?: boolean;
    suffixContent?: any;
    suffixContentType?: string;
    inline?: boolean;
    isFormItem?: boolean;
    name?: string;
    errMsg?: string;
    labelWidth?: any;
    commonSuffixIcon?: string;
    width?: any;
    label?: any;
    labelPosition?: "left-top" | "center" | "top";
    inputGroup?: boolean;
    labelColor?: string;
    required?: boolean;
    defaultValue?: any;
    options: any[];
    placeholder?: string;
    size?: "sm" | "lg";
    externalClassName?: string;
    readOnly?: boolean;
    transparent?: boolean;
    optionContentMaxHeight?: string;
    onChange?: (e?: any, ...args: any) => void;
    onFormDataChange?: (key: string, value: any) => void;
}
declare const _default: React.ComponentType<Omit<{
    ref?: React.LegacyRef<unknown> | undefined;
    selectValueMaxWidth?: any;
    errorPaddingLeft?: any;
    suffixContentExternalCls?: string | undefined;
    selectContentExternalCls?: string | undefined;
    labelMinWidth?: any;
    noWrap?: boolean | undefined;
    shouldFocus?: boolean | undefined;
    activeColor?: {
        font: string;
        bgc: string;
    } | undefined;
    returnType?: "str" | "obj" | undefined;
    showEmpty?: boolean | undefined;
    showDefaultValue?: boolean | undefined;
    labelKey?: string | undefined;
    valueKey?: string | undefined;
    showLabel?: boolean | undefined;
    suffixContent?: any;
    suffixContentType?: string | undefined;
    inline?: boolean | undefined;
    isFormItem?: boolean | undefined;
    name?: string | undefined;
    errMsg?: string | undefined;
    labelWidth?: any;
    commonSuffixIcon?: string | undefined;
    width?: any;
    label?: any;
    labelPosition?: "left-top" | "center" | "top" | undefined;
    inputGroup?: boolean | undefined;
    labelColor?: string | undefined;
    required?: boolean | undefined;
    defaultValue?: any;
    options: any[];
    placeholder?: string | undefined;
    size?: "sm" | "lg" | undefined;
    externalClassName?: string | undefined;
    readOnly?: boolean | undefined;
    transparent?: boolean | undefined;
    optionContentMaxHeight?: string | undefined;
    onChange?: ((e?: any, ...args: any) => void) | undefined;
    onFormDataChange?: ((key: string, value: any) => void) | undefined;
    key?: React.Key | null | undefined;
}, keyof import("react-i18next").WithTranslation<N, undefined>> & import("react-i18next").WithTranslationProps>;
export default _default;
